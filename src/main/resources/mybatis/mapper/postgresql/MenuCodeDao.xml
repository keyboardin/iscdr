<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MenuCodeDao">

	<!-- 조회조건 -->
	<sql id="whereCondition">
		<if test="search_value != null and search_value != ''">	
			AND  ( T.menu_nm LIKE '%'||replace(replace(#{search_value}, '_', '\_'), '%', '\%')||'%'
				OR T.menu_url LIKE '%'||replace(replace(#{search_value}, '_', '\_'), '%', '\%')||'%' )
		</if>	
		<if test="menu_par_id != null and menu_par_id != ''">
			AND T.menu_par_id=#{menu_par_id}		  
		</if>	
		<if test="use_yn != null and use_yn != ''">
			AND T.use_yn=#{use_yn}		  
		</if> 
	</sql>

	<select id="requestListCount" parameterType="MenuCodeModel" resultType="MenuCodeModel">
		/* MenuCodeDao.requestListCount 목록 Count - postgresql */		
		SELECT
			COUNT(*) records
		FROM tb_c_menu_code T
		WHERE 1=1
		<include refid="whereCondition"/>
	</select>
	 
	
	<select id="requestList" parameterType="MenuCodeModel" resultType="MenuCodeModel">
		/* MenuCodeDao.requestList 목록 조회 - postgresql */	
		SELECT
			menu_id,
			menu_par_id,
			menu_nm,
			menu_icon,
			menu_url,
			priority,
			use_yn,
			CASE WHEN T.use_yn='Y' THEN '사용' ELSE '사용안함' END use_yn_nm
		FROM tb_c_menu_code T
		WHERE 1=1
		<include refid="whereCondition"/>
		<if test="sidx==null or sidx==''">
			ORDER BY menu_par_id, priority
		</if>
		<if test="sidx!=null and sidx != ''">
			ORDER BY ${sidx} ${sord} 
		</if>
		<if test="start !=null and start != ''">
			LIMIT ${length} OFFSET ${start}	
		</if>
	</select>
	
	
	<select id="requestDetail" parameterType="MenuCodeModel" resultType="MenuCodeModel">
		/* MenuCodeDao.requestDetail 상세 조회 - postgresql */		
		SELECT
			menu_id,
			menu_par_id,
			menu_nm,
			menu_icon,
			menu_url,
			priority,
			use_yn,
			CASE WHEN T.use_yn='Y' THEN '사용' ELSE '사용안함' END use_yn_nm
		FROM tb_c_menu_code T
		WHERE T.menu_id=#{menu_id}
	</select>
	
	
	<insert id="requestInsert" parameterType="MenuCodeModel">
		/* MenuCodeDao.requestInsert 등록 - postgresql */		
		INSERT INTO tb_c_menu_code (
			menu_id,
			menu_par_id,
			menu_nm,
			menu_icon,
			menu_url,
			priority,
			use_yn
		) VALUES (
			#{menu_id},
			#{menu_par_id},
			#{menu_nm},
			#{menu_icon},
			#{menu_url},
			#{priority},
			#{use_yn}
		)
	</insert>
	
	
	<update id="requestUpdate" parameterType="MenuCodeModel">
		/* MenuCodeDao.requestUpdate 수정 - postgresql */		
		UPDATE tb_c_menu_code SET
			menu_id=#{menu_id},
			menu_par_id=#{menu_par_id},
			menu_nm=#{menu_nm},
			menu_icon=#{menu_icon},
			menu_url=#{menu_url},
			priority=#{priority},
			use_yn=#{use_yn}
		WHERE menu_id=#{menu_id_old}
	</update>
	
	
	<delete id="requestDelete" parameterType="MenuCodeModel">
		/* MenuCodeDao.requestDelete 삭제 - postgresql */		
		DELETE FROM tb_c_menu_code
		WHERE menu_id=#{menu_id}	
	</delete>
	
	
	<select id="requestMenuMapList" parameterType="MenuCodeModel" resultType="MenuCodeModel">
		/* MenuCodeDao.requestMenuMapList 목록 조회 - postgresql */	
		SELECT 
			T.menu_id,
			T.menu_par_id,
			T.menu_nm,
			T.menu_icon,
			T.menu_url,
			TM.priority
		FROM tb_c_menu_code T 
		INNER JOIN tb_c_menu_code_map TM on T.menu_id=TM.menu_id
		WHERE T.use_yn='Y'
		AND TM.user_type=#{user_type}
		ORDER BY priority
	</select>
	
	
	<select id="requestTree" parameterType="MenuCodeModel" resultType="java.util.HashMap">
		/* MenuCodeDao.requestTree 트리 - postgresql */	
		SELECT 
			'G1' AS id,
			'메뉴코드' AS text,
			'#' AS parent,
			'0' AS level,
			'/G1' path
		UNION ALL	
		SELECT 
			menu_id AS id,
			'['||menu_id||']'||menu_nm AS text, 
			CASE WHEN menu_id=menu_par_id THEN 'G1' ELSE menu_par_id END  AS parent,
			CASE WHEN menu_id=menu_par_id THEN '1' ELSE '2' END AS level,
			CASE WHEN menu_id=menu_par_id THEN '/G1/'||menu_par_id ELSE '/G1/'||menu_par_id||'/'||menu_id END AS path
		FROM tb_c_menu_code
		WHERE use_yn='Y'
	</select>
	
</mapper>

